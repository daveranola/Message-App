package com.example.demo;

import com.example.demo.Messages;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
@CrossOrigin(origins = "http://localhost:5173")  // allow React
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;
    @Autowired
    private MessagesRepository messagesRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public String addNewUser (@RequestBody User user) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        if (userRepository.existsByEmail(user.getEmail())) {
            throw new EmailAlreadyUsedException("Email already in use: " + user.getEmail());
        }


        userRepository.save(user);
        return "User added successfully";
    }

    @GetMapping(path="/all")
    public Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    @GetMapping(path="/userID")
    public User getUserByID(@RequestParam Integer id) {
        return userRepository.findById(id).orElse(null);
    }

    @PostMapping(path = "/addMessage")
    public String addNewMessage(@RequestBody Messages message) {
        messagesRepository.save(message);
        return "Message added successfully";
    }

    @GetMapping(path = "/allMessages")
    public Iterable<Messages> getAllMessages() {
        return messagesRepository.findAll();
    }

    @GetMapping(path="/messageID")
    public Messages getMessagesByID(@RequestParam Integer id) {
        return messagesRepository.findById(id).orElse(null);
    }


}